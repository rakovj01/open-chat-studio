# Generated by Django 4.2.7 on 2023-12-07 14:02

import django.core.serializers.json
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("service_providers", "0008_messagingprovider"),
        ("teams", "0005_invitation_groups"),
    ]

    operations = [
        migrations.CreateModel(
            name="Analysis",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(max_length=255)),
                ("source", models.CharField(help_text="Name of the pipeline source", max_length=255)),
                ("pipeline", models.CharField(help_text="Data processing pipeline", max_length=255)),
                (
                    "llm_model",
                    models.CharField(help_text="The LLM model to use.", max_length=20, verbose_name="LLM Model"),
                ),
                (
                    "llm_provider",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="service_providers.llmprovider",
                    ),
                ),
                (
                    "team",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="teams.team", verbose_name="Team"
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="RunGroup",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("start_time", models.DateTimeField(blank=True, null=True)),
                ("end_time", models.DateTimeField(blank=True, null=True)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("running", "Running"),
                            ("success", "Success"),
                            ("error", "Error"),
                        ],
                        default="pending",
                        max_length=128,
                    ),
                ),
                ("error", models.TextField(blank=True)),
                ("task_id", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "params",
                    models.JSONField(blank=True, default=dict, encoder=django.core.serializers.json.DjangoJSONEncoder),
                ),
                ("analysis", models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="analysis.analysis")),
                ("team", models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="teams.team")),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Resource",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(max_length=255)),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("text", "Text"),
                            ("csv", "CSV"),
                            ("json", "JSON"),
                            ("jsonl", "JSON Lines"),
                            ("xml", "XML"),
                            ("xlsx", "XLSX"),
                            ("image", "Image"),
                        ],
                        max_length=128,
                    ),
                ),
                ("file", models.FileField(upload_to="")),
                ("metadata", models.JSONField(blank=True, default=dict)),
                ("content_size", models.PositiveIntegerField(blank=True, null=True)),
                (
                    "team",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="teams.team", verbose_name="Team"
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="AnalysisRun",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("start_time", models.DateTimeField(blank=True, null=True)),
                ("end_time", models.DateTimeField(blank=True, null=True)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("running", "Running"),
                            ("success", "Success"),
                            ("error", "Error"),
                        ],
                        default="pending",
                        max_length=128,
                    ),
                ),
                ("task_id", models.CharField(blank=True, max_length=255, null=True)),
                ("output_summary", models.TextField(blank=True)),
                ("error", models.TextField(blank=True)),
                (
                    "log",
                    models.JSONField(blank=True, default=dict, encoder=django.core.serializers.json.DjangoJSONEncoder),
                ),
                (
                    "metadata",
                    models.JSONField(blank=True, default=dict, encoder=django.core.serializers.json.DjangoJSONEncoder),
                ),
                ("group", models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="analysis.rungroup")),
                ("resources", models.ManyToManyField(to="analysis.resource")),
            ],
            options={
                "ordering": ["created_at"],
            },
        ),
    ]
